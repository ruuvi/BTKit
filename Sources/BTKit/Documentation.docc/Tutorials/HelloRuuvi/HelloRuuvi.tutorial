@Tutorial(time: 30) {
    @Intro(title: "What's the weather like today?") {
        This tutorial guides you through building _HelloRuuvi_ â€” an app for displaying list of your favorite Bluetooth sensors.
    }
    
    @Section(title: "Set up Xcode project") {
        @ContentAndMedia {
            Let's start with creating an Xcode project.
        }
        
        @Steps {
            @Step {
                Open Xcode and click on "Create New Project...", select Multiplatform app, click "Next", give it a name of _HelloRuuvi_, click "Next", click "Create".
                
                @Image(source: "hello-ruuvi-xcode-0.png", alt: "Multiplatform project type selction on Xcode")
            }
            
            @Step {
                You should land on default Xcode project file `ContentView.swift` with a preview of "Hello World!" string.
                
                @Image(source: "hello-ruuvi-xcode-1.png", alt: "Default Xcode project")
            }
            
            @Step {
                Add a Swift Package deppendency on BTKit by clicking _HelloRuuvi_ on top left corner, selecting _HelloRuuvi_ project and pressing a plus sign on Package Dependencies tab. Enter `https://github.com/ruuvi/BTKit` in Search field at the top right and click on "Add Package". 
                
                @Image(source: "hello-ruuvi-xcode-2.png", alt: "Add BTKit")
            }
        }
    }

    @Section(title: "Request necessary permissions") {
        @ContentAndMedia {
            Privacy first, we have to request Bluetooth permissions both for iOS and macOS app.
        }
        
        @Steps {
            @Step {
                Select a _HelloRuuvi_ target and navigate to the `Info` section. Copy paste `NSBluetoothAlwaysUsageDescription` and paste it after right clicking on the list and selecting `Add Row`. 
                
                @Image(source: "hello-ruuvi-permissions-0.png", alt: "Request Bluetooth permission")
            }
            
            @Step {
                Fill the `NSBluetoothAlwaysUsageDescription` with something like `Bluetooth is used to listen to RuuviTags`.
                
                @Image(source: "hello-ruuvi-permissions-1.png", alt: "Fill Bluetooth description")
            }
            
            @Step {
                In order macOS app to be able to use Bluetooth, navigate to `Signing & Capabilities` tab and add a checkmark for `Bluetooth` `App Sandbox` Hardware option.  
                
                @Image(source: "hello-ruuvi-permissions-2.png", alt: "Add BTKit")
            }
        }
    }

    @Section(title: "Show the weather conditions!") {
        @ContentAndMedia {
            We are ready to display the stream of data on iOS or macOS device.
        }
        
        @Steps {
            @Step {
                Select `ContentView.swift` file on the right column. 
                
                @Code(name: "ContentView.swift", file: ContentView-0.swift)
            }
            
            @Step {
                Add `import BTKit` statement. 
                
                @Code(name: "ContentView.swift", file: ContentView-1.swift)
            }
            
            
            @Step {
                Define a `@State` variable with a set of RuuviTags. 
                
                @Code(name: "ContentView.swift", file: ContentView-2.swift)
            }
            
            @Step {
                Subscribe to the `RuuviTag` stream. 
                
                @Code(name: "ContentView.swift", file: ContentView-3.swift)
            }
            
            @Step {
                Conform `RuuviTag` to `Identifiable`. 
                
                @Code(name: "ContentView.swift", file: ContentView-4.swift)
            }
            
            @Step {
                Decide how do you want to sort the `RuuviTags`, in this example by RSSI. 
                
                @Code(name: "ContentView.swift", file: ContentView-5.swift)
            }
            
            @Step {
                Display the list with simple formatting. 
                
                @Code(name: "ContentView.swift", file: ContentView-6.swift)
            }
            
            @Step {
                Build and run either on macOS or iOS! If you have `RuuviTag` sensors in the range of Bluetooth, you will see the data. 
                But once shown, the data is not being updated... We will address this in the next tutorials.
                
                @Image(source: "hello-ruuvi-content-0.png", alt: "Final app")
            }
        }
    }
}
