{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/btkit\/ruuviupdates"]}],"hierarchy":{"modules":[{"projects":[{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi","sections":[{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Set-up-Xcode-project","kind":"task"},{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Request-necessary-permissions","kind":"task"},{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Show-the-weather-conditions","kind":"task"}]},{"sections":[{"kind":"task","reference":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#Observable"},{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#RuuviTagViewswift-file","kind":"task"},{"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#RuuviTagView-internals","kind":"task"},{"kind":"task","reference":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#Back-to-ContentViewswift"}],"reference":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates"}],"reference":"doc:\/\/BTKit\/tutorials\/MeetBTKit\/Hello-Ruuvi!"}],"reference":"doc:\/\/BTKit\/tutorials\/MeetBTKit","paths":[["doc:\/\/BTKit\/tutorials\/MeetBTKit","doc:\/\/BTKit\/tutorials\/MeetBTKit\/$volume","doc:\/\/BTKit\/tutorials\/MeetBTKit\/Hello-Ruuvi!"]]},"sections":[{"chapter":"Hello Ruuvi!","content":[{"inlineContent":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"type":"paragraph"}],"title":"Is it... updating?","estimatedTimeInMinutes":45,"kind":"hero"},{"kind":"tasks","tasks":[{"stepsSection":[{"runtimePreview":null,"caption":[],"media":null,"code":"ContentView-6.swift","content":[{"inlineContent":[{"type":"text","text":"Let’s quickly recall where we are at this very moment."}],"type":"paragraph"}],"type":"step"},{"caption":[],"media":null,"content":[{"inlineContent":[{"text":"Let’s start by adding an ","type":"text"},{"code":"Observable","type":"codeVoice"},{"text":" ","type":"text"},{"code":"ViewModel","type":"codeVoice"},{"type":"text","text":" class."}],"type":"paragraph"}],"runtimePreview":null,"code":"ContentView-7.swift","type":"step"},{"code":"ContentView-8.swift","content":[{"inlineContent":[{"text":"Let’s continue by adding an ","type":"text"},{"type":"codeVoice","code":"Observable"},{"type":"text","text":" "},{"type":"codeVoice","code":"Storage"},{"type":"text","text":" class."}],"type":"paragraph"}],"media":null,"type":"step","caption":[],"runtimePreview":null}],"title":"Observable","contentSection":[{"content":[{"inlineContent":[{"type":"text","text":"We will use Apple "},{"code":"Observable","type":"codeVoice"},{"type":"text","text":" mechanism to get the updates."}],"type":"paragraph"}],"kind":"contentAndMedia","mediaPosition":"trailing"}],"anchor":"Observable"},{"stepsSection":[{"content":[{"inlineContent":[{"type":"text","text":"Let’s add a new Swift file to the project."}],"type":"paragraph"}],"media":"ruuvi-updates-0.png","type":"step","runtimePreview":null,"caption":[],"code":null},{"media":"ruuvi-updates-1.png","code":null,"runtimePreview":null,"type":"step","caption":[],"content":[{"inlineContent":[{"type":"text","text":"Select the "},{"type":"codeVoice","code":"SwiftUIView"},{"type":"text","text":" type and give it a name of "},{"type":"codeVoice","code":"RuuviTagView.swift"},{"type":"text","text":"."}],"type":"paragraph"}]},{"media":null,"type":"step","runtimePreview":null,"content":[{"inlineContent":[{"text":"Let’s remove the comment and ","type":"text"},{"type":"codeVoice","code":"#Preview"},{"text":" sections. We will have this file at the end selected in Xcode.","type":"text"}],"type":"paragraph"}],"caption":[],"code":"RuuviTagView-0.swift"}],"contentSection":[{"mediaPosition":"trailing","content":[{"inlineContent":[{"text":"We will extract RuuviTag view to separate file.","type":"text"}],"type":"paragraph"}],"kind":"contentAndMedia"}],"anchor":"RuuviTagViewswift-file","title":"RuuviTagView.swift file"},{"stepsSection":[{"media":null,"code":"RuuviTagView-0.swift","runtimePreview":null,"content":[{"inlineContent":[{"type":"text","text":"We are still on "},{"type":"codeVoice","code":"RuuviTagView.swift"},{"type":"text","text":"."}],"type":"paragraph"}],"type":"step","caption":[]},{"code":"RuuviTagView-1.swift","runtimePreview":null,"media":null,"caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s add a "},{"code":"@Bindable","type":"codeVoice"},{"text":" variable to the ","type":"text"},{"code":"RuuviTagView.swift","type":"codeVoice"},{"type":"text","text":"."}]}],"type":"step"},{"runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Let’s implement the display logic in the ","type":"text"},{"type":"codeVoice","code":"RuuviTagView.swift"},{"type":"text","text":"."}]}],"media":null,"caption":[],"type":"step","code":"RuuviTagView-2.swift"},{"code":"RuuviTagView-3.swift","caption":[],"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"And add the date time field in the "},{"code":"RuuviTagView.swift","type":"codeVoice"},{"text":".","type":"text"}]}],"media":null,"runtimePreview":null,"type":"step"}],"contentSection":[{"content":[{"type":"paragraph","inlineContent":[{"text":"We will use the RuuviTagView to display RuuviTags.","type":"text"}]}],"mediaPosition":"trailing","kind":"contentAndMedia"}],"anchor":"RuuviTagView-internals","title":"RuuviTagView internals"},{"stepsSection":[{"type":"step","code":"ContentView-9.swift","content":[{"inlineContent":[{"type":"text","text":"We are on "},{"code":"ContentView.swift","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"runtimePreview":null,"caption":[],"media":null},{"code":"ContentView-10.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s use our "},{"code":"Storage","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"ViewModel"},{"type":"text","text":"."}]}],"caption":[],"runtimePreview":null,"media":null},{"type":"step","code":null,"runtimePreview":null,"caption":[],"media":"ruuvi-updates-2.png","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s build and rub the app!"}]}]}],"contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"text":"We will use the RuuviTagView in the List.","type":"text"}],"type":"paragraph"}]}],"anchor":"Back-to-ContentViewswift","title":"Back to ContentView.swift"}]}],"kind":"project","metadata":{"categoryPathComponent":"MeetBTKit","role":"project","title":"Is it... updating?","category":"BTKit"},"references":{"doc://BTKit/tutorials/BTKit/HelloRuuvi#Request-necessary-permissions":{"role":"pseudoSymbol","abstract":[{"text":"This tutorial guides you through building ","type":"text"},{"inlineContent":[{"type":"text","text":"HelloRuuvi"}],"type":"emphasis"},{"text":" — an app for displaying list of your favorite Bluetooth sensors.","type":"text"}],"url":"\/tutorials\/btkit\/helloruuvi#Request-necessary-permissions","type":"section","kind":"section","title":"Request necessary permissions","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Request-necessary-permissions"},"ruuvi-updates-1.png":{"identifier":"ruuvi-updates-1.png","type":"image","variants":[{"url":"\/images\/ruuvi-updates-1.png","traits":["1x","light"]}],"alt":"Add a file"},"ContentView-10.swift":{"content":["import BTKit","import SwiftUI","","struct ContentView: View {","    @State var content = Storage()","","    var body: some View {","        VStack {","            List(content.ruuviTags) { ruuviTag in","                RuuviTagView(ruuviTag: ruuviTag)","            }","        }","        .onReceive(BTForeground.publisher.ruuviTag) {","            content.update(with: $0)","        }","    }","}"],"syntax":"swift","fileType":"swift","highlights":[{"line":5},{"line":9},{"line":10}],"type":"file","identifier":"ContentView-10.swift","fileName":"ContentView.swift"},"doc://BTKit/tutorials/MeetBTKit/Hello-Ruuvi!":{"role":"article","abstract":[],"url":"\/tutorials\/meetbtkit\/hello-ruuvi!","type":"topic","kind":"article","title":"Hello Ruuvi!","identifier":"doc:\/\/BTKit\/tutorials\/MeetBTKit\/Hello-Ruuvi!"},"RuuviTagView-3.swift":{"content":["import SwiftUI","","struct RuuviTagView: View {","    @Bindable var ruuviTag: ViewModel","","    var body: some View {","        VStack(alignment: .leading) {","            Text(ruuviTag.mac ?? ruuviTag.id)","                .font(.title2)","                .bold()","            Text(ruuviTag.dateTime.formatted(date: .omitted, time: .complete))","                .font(.title3)","                .bold()","","            if let temperature = ruuviTag.celsius {","                HStack {","                    Image(systemName: \"thermometer\")","                    Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                }","            }","            if let humidity = ruuviTag.relativeHumidity {","                HStack {","                    Image(systemName: \"humidity\")","                    Text(\"\\(humidity, specifier: \"%.1f\")%\")","                }","            }","            if let pressure = ruuviTag.hectopascals {","                HStack {","                    Image(systemName: \"barometer\")","                    Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                }","            }","        }","    }","}"],"syntax":"swift","fileType":"swift","highlights":[{"line":11},{"line":12},{"line":13}],"type":"file","identifier":"RuuviTagView-3.swift","fileName":"RuuviTagView.swift"},"doc://BTKit/tutorials/BTKit/RuuviUpdates#RuuviTagView-internals":{"role":"pseudoSymbol","abstract":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"url":"\/tutorials\/btkit\/ruuviupdates#RuuviTagView-internals","type":"section","kind":"section","title":"RuuviTagView internals","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#RuuviTagView-internals"},"doc://BTKit/tutorials/BTKit/RuuviUpdates":{"role":"project","estimatedTime":"45min","abstract":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"url":"\/tutorials\/btkit\/ruuviupdates","type":"topic","kind":"project","title":"Is it... updating?","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates"},"ContentView-9.swift":{"type":"file","identifier":"ContentView-9.swift","content":["import BTKit","import SwiftUI","","struct ContentView: View {","    @State var content: Set<RuuviTag> = []","","    var body: some View {","        VStack {","            List(content.sorted(by: >)) { ruuviTag in","                Text(ruuviTag.mac ?? ruuviTag.uuid)","                    .font(.title2)","                    .bold()","","                if let temperature = ruuviTag.celsius {","                    HStack {","                        Image(systemName: \"thermometer\")","                        Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                    }","                }","                if let humidity = ruuviTag.relativeHumidity {","                    HStack {","                        Image(systemName: \"humidity\")","                        Text(\"\\(humidity, specifier: \"%.1f\")%\")","                    }","                }","                if let pressure = ruuviTag.hectopascals {","                    HStack {","                        Image(systemName: \"barometer\")","                        Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                    }","                }","            }","        }","        .onReceive(BTForeground.publisher.ruuviTag) {","            content.update(with: $0)","        }","    }","}"],"syntax":"swift","highlights":[],"fileName":"ContentView.swift","fileType":"swift"},"RuuviTagView-1.swift":{"type":"file","identifier":"RuuviTagView-1.swift","content":["import SwiftUI","","struct RuuviTagView: View {","    @Bindable var ruuviTag: ViewModel","","    var body: some View {","        Text(\"Hello, World!\")","    }","}"],"syntax":"swift","highlights":[{"line":4},{"line":5}],"fileName":"RuuviTagView.swift","fileType":"swift"},"ContentView-7.swift":{"type":"file","identifier":"ContentView-7.swift","content":["import BTKit","import SwiftUI","","struct ContentView: View {","    @State var content: Set<RuuviTag> = []","","    var body: some View {","        VStack {","            List(content.sorted(by: >)) { ruuviTag in","                Text(ruuviTag.mac ?? ruuviTag.uuid)","                    .font(.title2)","                    .bold()","","                if let temperature = ruuviTag.celsius {","                    HStack {","                        Image(systemName: \"thermometer\")","                        Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                    }","                }","                if let humidity = ruuviTag.relativeHumidity {","                    HStack {","                        Image(systemName: \"humidity\")","                        Text(\"\\(humidity, specifier: \"%.1f\")%\")","                    }","                }","                if let pressure = ruuviTag.hectopascals {","                    HStack {","                        Image(systemName: \"barometer\")","                        Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                    }","                }","            }","        }","        .onReceive(BTForeground.publisher.ruuviTag) {","            content.update(with: $0)","        }","    }","}","","extension RuuviTag: Identifiable {","    public var id: String { uuid }","}","","extension RuuviTag: Comparable {","    public static func < (lhs: RuuviTag, rhs: RuuviTag) -> Bool {","        lhs.rssi ?? 0 < rhs.rssi ?? 0","    }","}","","@Observable class ViewModel: Identifiable {","    var id: String","    var mac: String?","    var celsius: Double?","    var hectopascals: Double?","    var relativeHumidity: Double?","    var dateTime: Date","","    init(ruuviTag: RuuviTag) {","        self.id = ruuviTag.id","        self.mac = ruuviTag.mac","        self.celsius = ruuviTag.celsius","        self.hectopascals = ruuviTag.hectopascals","        self.relativeHumidity = ruuviTag.relativeHumidity","        self.dateTime = Date()","    }","}"],"syntax":"swift","highlights":[{"line":49},{"line":50},{"line":51},{"line":52},{"line":53},{"line":54},{"line":55},{"line":56},{"line":57},{"line":58},{"line":59},{"line":60},{"line":61},{"line":62},{"line":63},{"line":64},{"line":65},{"line":66}],"fileName":"ContentView.swift","fileType":"swift"},"ruuvi-updates-0.png":{"alt":"Add a file","identifier":"ruuvi-updates-0.png","type":"image","variants":[{"url":"\/images\/ruuvi-updates-0.png","traits":["1x","light"]}]},"ruuvi-updates-2.png":{"type":"image","variants":[{"traits":["1x","light"],"url":"\/images\/ruuvi-updates-2.png"}],"alt":"Updates app","identifier":"ruuvi-updates-2.png"},"ContentView-8.swift":{"content":["import BTKit","import SwiftUI","","struct ContentView: View {","    @State var content: Set<RuuviTag> = []","","    var body: some View {","        VStack {","            List(content.sorted(by: >)) { ruuviTag in","                Text(ruuviTag.mac ?? ruuviTag.uuid)","                    .font(.title2)","                    .bold()","","                if let temperature = ruuviTag.celsius {","                    HStack {","                        Image(systemName: \"thermometer\")","                        Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                    }","                }","                if let humidity = ruuviTag.relativeHumidity {","                    HStack {","                        Image(systemName: \"humidity\")","                        Text(\"\\(humidity, specifier: \"%.1f\")%\")","                    }","                }","                if let pressure = ruuviTag.hectopascals {","                    HStack {","                        Image(systemName: \"barometer\")","                        Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                    }","                }","            }","        }","        .onReceive(BTForeground.publisher.ruuviTag) {","            content.update(with: $0)","        }","    }","}","","extension RuuviTag: Identifiable {","    public var id: String { uuid }","}","","extension RuuviTag: Comparable {","    public static func < (lhs: RuuviTag, rhs: RuuviTag) -> Bool {","        lhs.rssi ?? 0 < rhs.rssi ?? 0","    }","}","","@Observable class ViewModel: Identifiable {","    var id: String","    var mac: String?","    var celsius: Double?","    var hectopascals: Double?","    var relativeHumidity: Double?","    var dateTime: Date","","    init(ruuviTag: RuuviTag) {","        self.id = ruuviTag.id","        self.mac = ruuviTag.mac","        self.celsius = ruuviTag.celsius","        self.hectopascals = ruuviTag.hectopascals","        self.relativeHumidity = ruuviTag.relativeHumidity","        self.dateTime = Date()","    }","}","","@Observable class Storage {","    var ruuviTags: [ViewModel] = []","    private var uniqueTags: Set<RuuviTag> = []","","    func update(with ruuviTag: RuuviTag) {","        uniqueTags.update(with: ruuviTag)","        ruuviTags = uniqueTags.sorted(by: >).map(ViewModel.init)","    }","}"],"type":"file","fileName":"ContentView.swift","highlights":[{"line":67},{"line":68},{"line":69},{"line":70},{"line":71},{"line":72},{"line":73},{"line":74},{"line":75},{"line":76}],"fileType":"swift","identifier":"ContentView-8.swift","syntax":"swift"},"RuuviTagView-0.swift":{"content":["import SwiftUI","","struct RuuviTagView: View {","    var body: some View {","        Text(\"Hello, World!\")","    }","}"],"fileName":"RuuviTagView.swift","type":"file","highlights":[],"fileType":"swift","identifier":"RuuviTagView-0.swift","syntax":"swift"},"doc://BTKit/tutorials/MeetBTKit":{"role":"overview","abstract":[{"text":"A library for building applications to listen and interact with Ruuvi devices.","type":"text"}],"url":"\/tutorials\/meetbtkit","type":"topic","kind":"overview","title":"Meet the BTKit","identifier":"doc:\/\/BTKit\/tutorials\/MeetBTKit"},"doc://BTKit/tutorials/BTKit/RuuviUpdates#Observable":{"role":"pseudoSymbol","abstract":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"url":"\/tutorials\/btkit\/ruuviupdates#Observable","type":"section","kind":"section","title":"Observable","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#Observable"},"ContentView-6.swift":{"content":["import BTKit","import SwiftUI","","struct ContentView: View {","    @State var content: Set<RuuviTag> = []","","    var body: some View {","        VStack {","            List(content.sorted(by: >)) { ruuviTag in","                Text(ruuviTag.mac ?? ruuviTag.uuid)","                    .font(.title2)","                    .bold()","","                if let temperature = ruuviTag.celsius {","                    HStack {","                        Image(systemName: \"thermometer\")","                        Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                    }","                }","                if let humidity = ruuviTag.relativeHumidity {","                    HStack {","                        Image(systemName: \"humidity\")","                        Text(\"\\(humidity, specifier: \"%.1f\")%\")","                    }","                }","                if let pressure = ruuviTag.hectopascals {","                    HStack {","                        Image(systemName: \"barometer\")","                        Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                    }","                }","            }","        }","        .onReceive(BTForeground.publisher.ruuviTag) {","            content.update(with: $0)","        }","    }","}","","extension RuuviTag: Identifiable {","    public var id: String { uuid }","}","","extension RuuviTag: Comparable {","    public static func < (lhs: RuuviTag, rhs: RuuviTag) -> Bool {","        lhs.rssi ?? 0 < rhs.rssi ?? 0","    }","}"],"type":"file","fileName":"ContentView.swift","highlights":[],"fileType":"swift","identifier":"ContentView-6.swift","syntax":"swift"},"doc://BTKit/tutorials/BTKit/HelloRuuvi#Set-up-Xcode-project":{"role":"pseudoSymbol","abstract":[{"type":"text","text":"This tutorial guides you through building "},{"inlineContent":[{"text":"HelloRuuvi","type":"text"}],"type":"emphasis"},{"text":" — an app for displaying list of your favorite Bluetooth sensors.","type":"text"}],"url":"\/tutorials\/btkit\/helloruuvi#Set-up-Xcode-project","type":"section","kind":"section","title":"Set up Xcode project","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Set-up-Xcode-project"},"doc://BTKit/tutorials/BTKit/RuuviUpdates#RuuviTagViewswift-file":{"role":"pseudoSymbol","abstract":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"url":"\/tutorials\/btkit\/ruuviupdates#RuuviTagViewswift-file","type":"section","kind":"section","title":"RuuviTagView.swift file","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#RuuviTagViewswift-file"},"doc://BTKit/tutorials/BTKit/HelloRuuvi#Show-the-weather-conditions":{"role":"pseudoSymbol","abstract":[{"text":"This tutorial guides you through building ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"HelloRuuvi","type":"text"}]},{"text":" — an app for displaying list of your favorite Bluetooth sensors.","type":"text"}],"url":"\/tutorials\/btkit\/helloruuvi#Show-the-weather-conditions","type":"section","kind":"section","title":"Show the weather conditions!","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi#Show-the-weather-conditions"},"doc://BTKit/tutorials/BTKit/HelloRuuvi":{"role":"project","estimatedTime":"30min","abstract":[{"text":"This tutorial guides you through building ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"HelloRuuvi","type":"text"}]},{"text":" — an app for displaying list of your favorite Bluetooth sensors.","type":"text"}],"url":"\/tutorials\/btkit\/helloruuvi","type":"topic","kind":"project","title":"What's the weather like today?","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/HelloRuuvi"},"doc://BTKit/tutorials/BTKit/RuuviUpdates#Back-to-ContentViewswift":{"role":"pseudoSymbol","abstract":[{"text":"In previous tutorial we did a simple app that displays list of RuuviTags. The problem with it is - it doesn’t update… Let’s improve!","type":"text"}],"url":"\/tutorials\/btkit\/ruuviupdates#Back-to-ContentViewswift","type":"section","kind":"section","title":"Back to ContentView.swift","identifier":"doc:\/\/BTKit\/tutorials\/BTKit\/RuuviUpdates#Back-to-ContentViewswift"},"RuuviTagView-2.swift":{"content":["import SwiftUI","","struct RuuviTagView: View {","    @Bindable var ruuviTag: ViewModel","","    var body: some View {","        VStack(alignment: .leading) {","            Text(ruuviTag.mac ?? ruuviTag.id)","                .font(.title2)","                .bold()","","            if let temperature = ruuviTag.celsius {","                HStack {","                    Image(systemName: \"thermometer\")","                    Text(\"\\(temperature, specifier: \"%.1f\")°C\")","                }","            }","            if let humidity = ruuviTag.relativeHumidity {","                HStack {","                    Image(systemName: \"humidity\")","                    Text(\"\\(humidity, specifier: \"%.1f\")%\")","                }","            }","            if let pressure = ruuviTag.hectopascals {","                HStack {","                    Image(systemName: \"barometer\")","                    Text(\"\\(pressure, specifier: \"%.1f\") hPa\")","                }","            }","        }","    }","}"],"syntax":"swift","fileType":"swift","highlights":[{"line":7},{"line":8},{"line":9},{"line":10},{"line":11},{"line":12},{"line":13},{"line":14},{"line":15},{"line":16},{"line":17},{"line":18},{"line":19},{"line":20},{"line":21},{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":27},{"line":28},{"line":29},{"line":30}],"type":"file","identifier":"RuuviTagView-2.swift","fileName":"RuuviTagView.swift"}}}